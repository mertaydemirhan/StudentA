@model IEnumerable<StudentApp.Models.BgEducationRecords>


<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<style>
    .modelContainer {
        opacity: 0;
        pointer-events: none;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        transition: all 0.3s ease;
    }

    .modelContainer, .clickableArea {
        position: fixed;
        width: 100vw;
        height: 100vh;
        top: 0;
        left: 0;
    }

        .modelContainer.active {
            opacity: 1;
            pointer-events: all;
        }

    .model {
        position: relative;
        border-radius: 15px;
        background-color: white;
        padding: 25px;
        min-width: 400px;
    }

    .buttonBox {
        display: flex;
        justify-content: flex-end;
    }
</style>

<div class="modelContainer">
    <div class="clickableArea" onclick="toggleModel()"></div>

    <div class="model">
        <div class="row">
            <div class="col-lg-6">
                <label>Institution name</label>
                <p class="institutionName"></p>
            </div>
            <div class="col-lg-6">
                <label>Faculty</label>
                <p class="faculty"></p>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Instruction Language</label>
                <p class="instructionLanguage"></p>
            </div>
            <div class="col-lg-6">
                <label>Institution Country</label>
                <p class="institutionCountry"></p>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Study Mode</label>
                <p class="studyMode"></p>
            </div>
            <div class="col-lg-6">
                <label>Educational Level</label>
                <p class="educationLevel"></p>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Start date</label>
                <p class="startDate"></p>
            </div>
            <div class="col-lg-6">
                <label>Completion date</label>
                <p class="completionDate"></p>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Average grade</label>
                <p class="averageGrade"></p>
            </div>
        </div>

        <div class="buttonBox">
            <button class="btn btn-danger" onclick="toggleModel()">Close</button>
        </div>
    </div>
</div>

<table class="table" id="tbl_BgEducations" style=" margin-top:10px;">
    <tr>
        <th>
            @Html.Label("InstitutionName", new { @class = "font-weight-bold" })
        </th>
        <th>
            @Html.Label("InsCountry", new { @class = "font-weight-bold" })
        </th>
        <th>
            @Html.Label("Faculty", new { @class = "font-weight-bold" })
        </th>
        <th>
            @Html.Label("AvarageGrade", new { @class = "font-weight-bold" })
        </th>
    </tr>

    @if (Model != null)
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    <span style="font-weight:bold; color:tomato; "> @Html.DisplayFor(modelItem => item.InstitutionName)</span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InsCountry)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Faculty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AvarageGrade)
                </td>
                <td>
                    <button id="BgDelete" class="btn btn-danger" name="@item.ID" title="@item.InstitutionName">Delete</button>
                    @*<a href="@Url.Action("FullScreen", "Application", new { Id = item.ID })" id="ViewScreen" class="btn btn-warning"><span class="fa fullscreen"></span>View</a>
                        <a href="@Url.Action("Download", "Application", new { Id = item.ID })" class="btn btn-success"><span class="fa fa-download"></span> Download</a>*@
                    <a href="#" id="ViewScreen" class="btn btn-warning" name="@item.ID" onclick="toggleModel(@item.ID)"><span class="fa fullscreen"></span>View</a>
                    @*<a href="#" class="btn btn-success"><span class="fa fa-edit"></span> Edit</a>*@
                </td>

            </tr>
        }
    }

    @if (Model.ToList().Count < 1)
    {
        <tr>
            <td>
                <span style="font-weight:bold; color:tomato; "> There is No Background education</span>
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>

        </tr>
    }
</table>




<script type="text/javascript">



      function toggleModel(id = false) {
        const modelContainer = document.querySelector(".modelContainer");
        modelContainer.classList.toggle("active");

        if (id) {
            @*var model = @Html.Raw(Json.Encode(Model));*@
            var model = @Html.Raw(Json.Encode(Model));
            model.forEach(item => {
                if (item.ID == id) {
                    const time1 = + item.EducationStDate.replace(/\D/g, "");
                    const time2 = + item.EducationCompDate.replace(/\D/g, "");

                    console.log(time1, time2);

                    var EducationStDate = new Date(time1).toLocaleString("tr-TR");
                    var EducationCompDate = new Date(time2).toLocaleString("tr-TR");
                    document.querySelector(".model .institutionName").innerHTML = item.InstitutionName;
                    document.querySelector(".model .faculty").innerHTML = item.Faculty;
                    document.querySelector(".model .instructionLanguage").innerHTML = item.InsturactionLang;
                    document.querySelector(".model .institutionCountry").innerHTML = item.InsCountry;
                    document.querySelector(".model .studyMode").innerHTML = item.StudyMode;
                    document.querySelector(".model .educationLevel").innerHTML = item.EducationLevel;
                    document.querySelector(".model .startDate").innerHTML = EducationStDate.substr(0,10)
                    document.querySelector(".model .completionDate").innerHTML = EducationCompDate.substr(0,10);
                    document.querySelector(".model .averageGrade").innerHTML = item.AvarageGrade;


                }
            })
        }


    }



    $('Button').on('click', function () {
        if (this.id == 'BgDelete') {
            console.log(this.id + " Deleted");
            var EducationID = parseInt(this.name);
            var title = this.title;
            $.ajax({
                type: 'GET',
                url: '/Application/BgDelete',
                data: { ID: EducationID },
                success: function (result) {
                    ResetTexts();
                    alert(EducationID + " Deleted");
                    RefreshBgEducationTBL();
                }
            });
        }

    });

        function RefreshBgEducationTBL() {
        var url = '@Url.Action("BgEducationRecords", "Application")';
                var notifications = $("#tbl_BgEducations");
                setInterval(function () {
                    notifications.load(url);
                }, 3000);
    }

    function ResetTexts() {
        document.getElementById('InstitutionName').value = null;
        document.getElementById('Faculty').value = null;
        document.getElementById('InsCountry').value = null;
        document.getElementById('StudyMode').value = null;
        document.getElementById('EducationLevel').value = null;
        document.getElementById('EducationStDate').value = null;
        document.getElementById('EducationCompDate').value = null;
        document.getElementById('AvarageGrade').value = null;

    }



</script>

<script src="~/Content/Scripts/bootstrap.min.js"></script>