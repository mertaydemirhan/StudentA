@model IEnumerable<StudentApp.Models.WorkExperiences>

<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
@*<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>*@
<style>
    .modelContainer_WorkExp {
        opacity: 0;
        pointer-events: none;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        transition: all 0.3s ease;
    }

    .modelContainer_WorkExp, .clickableArea {
        position: fixed;
        width: 100vw;
        height: 100vh;
        top: 0;
        left: 0;
    }

        .modelContainer_WorkExp.active {
            opacity: 1;
            pointer-events: all;
        }

    .model_WorkExp {
        position: relative;
        border-radius: 15px;
        background-color: white;
        padding: 25px;
        min-width: 400px;
    }

    .buttonBox {
        display: flex;
        justify-content: flex-end;
    }
</style>

<div class="modelContainer_WorkExp">
    <div class="clickableArea" onclick="toggleModel_WorkExp()"></div>
    <div class="model_WorkExp">
        <div class="row">
            <div class="col-lg-6">
                <label>Company Name</label>
                <p class="CompanyName"></p>
            </div>
            <div class="col-lg-6">
                <label>Position</label>
                <p class="Position"></p>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Job Type</label>
                <p class="JobType"></p>
            </div>
            <div class="col-lg-6">
                <label>Employee Adress</label>
                <p class="EmployeeAdress"></p>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Manager Name</label>
                <p class="ManagerName"></p>
            </div>
            <div class="col-lg-6">
                <label>Employee Mail</label>
                <p class="EmployeeMail"></p>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Employee Phone</label>
                <p class="EmployeePhone"></p>
            </div>
            <div class="col-lg-6">
                <label>Job Description</label>
                <p class="JobDescription"></p>
            </div>
        </div>

        <div class="buttonBox">
            <button class="btn btn-danger" onclick="toggleModel_WorkExp()">Close</button>
        </div>
    </div>
</div>

<table class="table" id="tbl_WorkExps" style=" margin-top:10px;">
    <tr>
        <th>
            @Html.Label("CompanyName", new { @class = "font-weight-bold" })
        </th>
        <th>
            @Html.Label("Position", new { @class = "font-weight-bold" })
        </th>
        <th>
            @Html.Label("ManagerName", new { @class = "font-weight-bold" })
        </th>
        <th>
            @Html.Label("EmployeeMail", new { @class = "font-weight-bold" })
        </th>
    </tr>

    @if (Model != null)
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    <span style="font-weight:bold; color:tomato; "> @Html.DisplayFor(modelItem => item.CompanyName)</span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Position)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ManagerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeMail)
                </td>
                <td>
                    <button id="WorkExpDelete" class="btn btn-danger" name="@item.ID" title="@item.CompanyName">Delete</button>
                    @*<a href="#" id="ViewScreen" class="btn btn-warning" onclick="toggleModel(@item.ID)"><span class="fa fullscreen"></span>View</a>*@
                    <a href="#" id="ViewScreen" class="btn btn-warning" name="@item.ID" onclick="toggleModel_WorkExp(@item.ID)"><span class="fa fullscreen"></span>View</a>
                    @*<a href="#" class="btn btn-success"><span class="fa fa-edit"></span> Edit</a>*@
                </td>

            </tr>
        }
    }

    @if (Model.ToList().Count < 1)
    {
        <tr>
            <td>
                <span style="font-weight:bold; color:tomato; "> There is no work experience</span>
            </td>
            <td>
                &nbsp;
            </td>
            <td>
                &nbsp;
            </td>

        </tr>
    }
</table>


<script type="text/javascript">

    function toggleModel_WorkExp(id = false) {
        const modelContainer = document.querySelector(".modelContainer_WorkExp");
        modelContainer.classList.toggle("active");
        debugger;
        if (id) {
            var model = @Html.Raw(Json.Encode(Model));
            model.forEach(item => {
                if (item.ID == id) {
                    document.querySelector(".model_WorkExp .CompanyName").innerHTML = item.CompanyName;
                    document.querySelector(".model_WorkExp .Position").innerHTML = item.Position;
                    document.querySelector(".model_WorkExp .JobType").innerHTML = item.JobType;
                    document.querySelector(".model_WorkExp .EmployeeAdress").innerHTML = item.EmployeeAdress;
                    document.querySelector(".model_WorkExp .ManagerName").innerHTML = item.ManagerName;
                    document.querySelector(".model_WorkExp .EmployeeMail").innerHTML = item.EmployeeMail;
                    document.querySelector(".model_WorkExp .EmployeePhone ").innerHTML = item.EmployeePhone;
                    document.querySelector(".model_WorkExp .JobDescription").innerHTML = item.JobDescription;
                }
            })
        }
    };
    $('Button').on('click', function () {

        // if Clicked button was Delete button.. Do this
        if (this.id == 'WorkExpDelete') {
            var EducationID = parseInt(this.name);
            var title = this.title;
            $.ajax({
                type: 'GET',
                url: '/Application/WorkExpDelete',
                data: { ID: EducationID },
                success: function (result) {
                    ResetTextsWorkExp();
                    RefreshWorkExp();
                    event.preventDefault();
                    swal(
                        'Done !',
                        title + ' Deleted!',
                        'success'
                    );
                }
            });
        };

    });
    function RefreshWorkExp() {
        var url = '@Url.Action("WorkExperiences", "Application")';
        var notifications = $("#tbl_WorkExps");
        setInterval(function () {
            notifications.load(url);
        }, 3000);
    }
    function ResetTextsWorkExp() {
        document.getElementById('CompanyName').value = null;
        document.getElementById('EmployeeAdress').value = null;
        document.getElementById('EmployeeMail').value = null;
        document.getElementById('EmployeePhone').value = null;
        document.getElementById('ManagerName').value = null;
        document.getElementById('JobType').value = null;
        document.getElementById('Position').value = null;
        document.getElementById('JobDescription').value = null;
    }
</script>
@*<script src="~/Content/Scripts/bootstrap.min.js"></script>*@