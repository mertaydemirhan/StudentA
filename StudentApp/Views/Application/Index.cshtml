@model StudentApp.ObjectModels.Application
@{ Layout = "~/Views/Shared/_Layout.cshtml"; }


@using (Html.BeginForm("UpdateApplication", "Application", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "col-md-9", @style = "margin-bottom:50px" }))
{
    <h3 class="title text-center">Personal Details</h3>
    @* Student INFORMATION PART*@
    <div id="1" class="page active" onload="pagerefresh()">
        <h2>Student Information</h2>
        <div>
            <label>ID:</label><br />
            @Html.TextBoxFor(x => x.ID, new { @id = "id", @class = "form-control", @style = "width:100px", @readonly = "readonly" })
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Name</label>
                @*@Html.TextBoxFor(x => x.Name, new { @class = "form-control" })*@
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
            </div>

            <div class="col-lg-6 required">
                <label>Surname</label>
                @Html.TextBoxFor(x => x.Surname, new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Gender</label>
                @Html.DropDownListFor(x => x.Gender, new SelectList(new List<string> { "Female", "Male" }), new { rel = "1", @class = "form-select" })
            </div>

            <div class="col-lg-6">
                <label>Marital Status</label>
                @Html.DropDownListFor(x => x.maritalStatus, new SelectList(new List<string> { "Single", "Married", "Divorced", "Engaged" }), new { rel = "1", @class = "form-select" })

            </div>
        </div>

        <label>Address</label>
        <div>
            @Html.TextBoxFor(x => x.AddressLine1, new { @class = "form-control", placeholder = "Address Line 1", style = "margin-bottom:15px" })
            @Html.TextBoxFor(x => x.AddressLine2, new { @class = "form-control", placeholder = "Address Line 2" })

            <div class="row">
                <div class="col-lg-6">
                    @Html.TextBoxFor(x => x.City, new { @class = "form-control", placeholder = "City" })

                </div>

                <div class="col-lg-6">
                    @Html.TextBoxFor(x => x.State, new { @class = "form-control", placeholder = "State" })

                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    @Html.TextBoxFor(x => x.Zip, new { @class = "form-control", placeholder = "Zip" })

                </div>
                <div class="col-lg-6">
                    @Html.TextBoxFor(x => x.Country, new { @class = "form-control", placeholder = "Country" })

                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Date of birth</label>
                @Html.TextBoxFor(m => m.DateofBirth, "{0:yyyy-MM-ddThh:mm:ss}", new { @class = "form-control", @type = "datetime-local" })
            </div>

            <div class="col-lg-6">
                <label>Country of birth</label>
                @Html.TextBoxFor(x => x.CountryofBirth, new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Citizenship(Main)</label>
                @Html.TextBoxFor(x => x.CitizenshipMain, new { @class = "form-control" })
            </div>

            <div class="col-lg-6">
                <label>Place of birth</label>
                @Html.TextBoxFor(x => x.PlaceofBirth, new { @class = "form-control" })
            </div>
        </div>

        <label>Father name and surname</label>
        <div class="row">
            <div class="col-lg-6">
                @Html.TextBoxFor(x => x.FatherName, new { @class = "form-control" })
            </div>

            <div class="col-lg-6">
                @Html.TextBoxFor(x => x.FatherSurname, new { @class = "form-control" })
            </div>
        </div>

        <label>Mother name and surname</label>
        <div class="row">
            <div class="col-lg-6">
                @Html.TextBoxFor(x => x.MotherName, new { @class = "form-control" })
            </div>

            <div class="col-lg-6">
                @Html.TextBoxFor(x => x.MotherSurname, new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Email address</label>
                <input value="@User.Identity.Name" readonly type="email" class="form-control">

                <p class="form-text">
                    We'll never share your contact info with
                    anyone else.
                </p>
            </div>

            <div class="col-lg-6">
                <label>Phone number</label>
                @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control" })
            </div>
        </div>

        <hr />

        <h2>Passport And ID Details</h2>
        <label>Passport number</label>
        @Html.TextBoxFor(x => x.PassaportNumber, new { @class = "form-control" })

        <div class="row">
            <div class="col-lg-6">
                <label>Passport start date</label>
                @*@Html.TextBoxFor(m => m.PassStartDate, "{0:yyyy-MM-ddThh:mm:ss}", new { @class = "form-control", @type = "datetime-local" })*@
                @Html.TextBoxFor(m => m.PassStartDate, "{0:yyyy-MM-dd}", new {@class = "form-control", @type="date"})
            </div>
            <div class="col-lg-6">
                <label>Passport expiry date</label>
                @Html.TextBoxFor(m => m.PassExpireDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Issuing Country</label>
                @Html.TextBoxFor(x => x.IssuingCountry, new { @class = "form-control" })
            </div>
            <div class="col-lg-6">
                <label>Issuing Authority</label>
                @Html.TextBoxFor(x => x.IssuingAuthority, new { @class = "form-control" })
            </div>
        </div>

        <label>National ID number</label>
        @Html.TextBoxFor(x => x.NationalId, new { @class = "form-control" })

        <div class="row">
            <div class="col-lg-6">
                <label>ID start date</label>
                @Html.TextBoxFor(m => m.IdStartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
            </div>
            <div class="col-lg-6">
                <label>ID expiry date</label>
                @Html.TextBoxFor(m => m.IdExpireDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Issuing Country</label>
                @Html.TextBoxFor(x => x.IssuingCountry, new { @class = "form-control" })
            </div>
            <div class="col-lg-6">
                <label>Issuing Authority</label>
                @Html.TextBoxFor(x => x.IssuingAuthority, new { @class = "form-control" })
            </div>
        </div>

        <div class="col-lg-6">
            <label>Country of Citizenship</label>
            @Html.TextBoxFor(x => x.CountryCitizenship, new { @class = "form-control" })
        </div>
    </div>
    @* Educational Background PART*@
    <div id="2" class="page">
        <h2>Educational Background</h2>
        <p class="subtitle">
            Please provide your relevant education
            qualifications
        </p>

        <div class="row">
            <div class="col-lg-6">
                <label>Institution name</label>
                @*@Html.DisplayFor(x => x.All(), new { @class = "form-control" })*@
                <input type="text" id="InstitutionName" class="form-control">
            </div>

            <div class="col-lg-6">
                <label>Faculty</label>
                @*@Html.TextBoxFor(x => x.BgEducation.Faculty, new { @class = "form-control" })*@
                <input type="text" id="Faculty" class="form-control">
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Instruction Language</label>
                @*@Html.TextBoxFor(x => x.BgEducation.InsturactionLang, new { @class = "form-control" })*@
                <input type="text" id="InsturactionLang" class="form-control">
            </div>

            <div class="col-lg-6">
                <label>Institution Country</label>
                @*@Html.TextBoxFor(x => x.BgEducation.InsCountry, new { @class = "form-control" })*@
                <input type="text" id="InsCountry" class="form-control">
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Study Mode</label>
                @*@Html.DropDownListFor(x => x.BgEducation.StudyMode, new SelectList(new List<string> { "Full-Time", "Part-Time", "Online" }), new { rel = "0", @class = "form-select" })*@
                <input type="text" id="StudyMode" class="form-control">
            </div>

            <div class="col-lg-6">
                <label>Educational Level</label>
                @*@Html.DropDownListFor(x => x.BgEducation.EducationLevel, new SelectList(new List<string> { "General Education (9 years)", "Complete Secondary Education (Attestat)", "Complete Professional Education", "International Foundation Programme", "Bachelor's degree", "Pre-Masters", "Master degree", "PhD", "Other" }), new { rel = "0", @class = "form-select" })*@
                <select name="EducationLevel" id="EducationLevel" class="form-select">
                    <option value="General Education (9 years)">General Education (9 years)</option>
                    <option value="Complete Secondary Education (Attestat)">Complete Secondary Education (Attestat)</option>
                    <option value="Complete Professional Education">Complete Professional Education</option>
                    <option value="International Foundation Programme">International Foundation Programme</option>
                    <option value="Bachelor's degree">Bachelor's degree</option>
                    <option value="Pre-Masters">Pre-Masters</option>
                    <option value="Master degree">Master degree</option>
                    <option value="PhD">PhD</option>
                    <option value="Other">Other</option>
                </select>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Start date</label>
                @*@Html.TextBoxFor(m => m.BgEducation.EducationStDate, "{0:yyyy-MM-ddThh:mm:ss}", new { @class = "form-control", type = "datetime-local" })*@
                <input type="date" id="EducationStDate" class="form-control">
            </div>

            <div class="col-lg-6">
                <label>Completion date</label>
                @*@Html.TextBoxFor(m => m.BgEducation.EducationCompDate, "{0:yyyy-MM-ddThh:mm:ss}", new { @class = "form-control", type = "datetime-local" })*@
                <input type="date" id="EducationCompDate" class="form-control">
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Awarded</label>
                <div class="form-check form-switch fs-5">
                    <input class="form-check-input"
                           type="checkbox"
                           role="switch"
                           id="ChkAwarded" />
                </div>
            </div>

            <div class="col-lg-6">
                <label>Average grade</label>
                @*@Html.TextBoxFor(x => x.BgEducation.AvarageGrade, new { @class = "form-control" })*@
                <input type="text" id="AvarageGrade" class="form-control">
            </div>
            @*<input type="button" id="Add" value="Add To List" style="margin-top: 10px;" class="btn btn-success">*@

        </div>
        <label id="AddBgEducation" class="btn btn-success">Add To List</label>
        <div>
            @{
                Html.RenderAction("BgEducationRecords", "Application"); }
        </div>

    </div>
    @*Future Education  PART*@
    <div id="3" class="page">
        @{ Html.RenderPartial("FutureEducation");}
    </div>
    @* Work Experience PART*@
    <div id="4" class="page">
        <h2>Work Experience</h2>
        <p class="subtitle">
            If you have relevant work experience, please provide
            details
        </p>

        <div class="row">
            <div class="col-lg-6">
                <label> Company Name</label>
                <input type="text" id="CompanyName" class="form-control">
            </div>

            <div class="col-lg-6">
                <label>Position</label>
                <input type="text" id="Position" class="form-control">
            </div>
        </div>

        <label>Job Type</label>
        <select name="JobType" id="JobType" class="form-select">
            <option value="Full-Time">Full-Time</option>
            <option value="Part-Time">Part-Time</option>

        </select>


        <div class="row">
            <div class="col-lg-6">
                <label>Employee address</label>
                <input type="text" id="EmployeeAdress" class="form-control">
            </div>

            <div class="col-lg-6">
                <label>Manager name</label>
                <input type="text" id="ManagerName" class="form-control">
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <label>Employee Email</label>
                <input type="text" id="EmployeeMail" class="form-control">
            </div>

            <div class="col-lg-6">
                <label>Employee Phone</label>
                <input type="text" id="EmployeePhone" class="form-control">
            </div>
        </div>
        <label>Job Description</label>
        <textarea id="JobDescription" class="form-control"></textarea>

        <div style="margin-top:4px;">
            <label id="AddWorkExps" class="btn btn-success">Add To List</label>
        </div>

        <div>
            @{ Html.RenderAction("WorkExperiences", "Application");}
        </div>

    </div>
    @* Language Certificates PART*@
    <div id="5" class="page">
        <div>
            @{ Html.RenderPartial("LanguageCertificates"); }
        </div>
    </div>
    @* Upload Files PART*@
    <form id="UploadFiles">
        <div id="6" class="page">
            <div id="Submitform">
                <h2>Submit Documents</h2>
                <p class="subtitle">
                    Please upload any other documents that are required
                    for the application.
                    * File size must be less than 2 MB
                </p>

                <div class="row justify-content-md-around">
                    <div class="col-lg-5">
                        <input type="file" id="passport" onchange="fileform(event)" class="custom-file-input" style="display:none">
                        <label for="passport" class="custom-file-label text-truncate form-control">Choose Passport File...</label>
                    </div>
                    <div class="col-lg-5">
                        <input type="file" onchange="fileform(event)" class="custom-file-input form-control" id="NationalID" style="display:none">
                        <label for="NationalID" class="custom-file-label text-truncate form-control">Choose NationalID File...</label>

                    </div>
                </div>

                <div class="row justify-content-md-around">
                    <div class="col-lg-5">
                        <input type="file" onchange="fileform(event)" class="custom-file-input form-control" id="Diploma" style="display:none">
                        <label for="Diploma" class="custom-file-label text-truncate form-control">Choose Diploma File...</label>

                    </div>
                    <div class="col-lg-5">
                        <input type="file" onchange="fileform(event)" class="custom-file-input form-control" id="Transcript" style="display:none">
                        <label for="Transcript" class="custom-file-label text-truncate form-control">Choose Transcript File...</label>

                    </div>
                </div>

                <div class="row justify-content-md-around">
                    <div class="col-lg-5">
                        <input type="file" onchange="fileform(event)" class="custom-file-input form-control" id="CV" style="display:none">
                        <label for="CV" class="custom-file-label text-truncate form-control">Choose CV File...</label>

                    </div>
                    <div class="col-lg-5">
                        <input type="file" onchange="fileform(event)" class="custom-file-input form-control" id="IELTSorToeflCertificate" style="display:none">
                        <label for="IELTSorToeflCertificate" class="custom-file-label text-truncate form-control">Choose Certificate File...</label>

                    </div>
                </div>

                <hr />

                <div class="row justify-content-md-around">
                    <div class="col-lg-5">
                        <input type="file" onchange="fileform(event)" class="custom-file-input form-control" id="Extradocument1" style="display:none">
                        <label for="Extradocument1" class="custom-file-label text-truncate form-control">Choose Extra Document...</label>
                    </div>
                    <div class="col-lg-5">
                        <input type="file" onchange="fileform(event)" class="custom-file-input form-control" id="Extradocument2" style="display:none">
                        <label for="Extradocument2" class="custom-file-label text-truncate form-control">Choose Extra Document...</label>
                    </div>
                </div>

                <div class="row justify-content-md-around">
                    <div class="col-lg-5">
                        <input type="file" onchange="fileform(event)" class="custom-file-input form-control" id="Extradocument3" style="display:none">
                        <label class="custom-file-label text-truncate form-control">Choose Extra Document...</label>

                    </div>
                    <div class="col-lg-5">
                        <input type="file" onchange="fileform(event)" class="custom-file-input form-control" id="Extradocument4" style="display:none">
                        <label for="Extradocument4" class="custom-file-label text-truncate form-control">Choose Extra Document...</label>

                    </div>
                </div>
                <div id="UploadTable" class="UploadTable">
                    @*@{Html.RenderPartial("UploadFileTable",Model.UploadedFiles);}*@
                    @{ Html.RenderAction("UploadFileReturn", "Application");}
                </div>

            </div>
        </div>
        <div class="buttonContainer">
            <button class="btn btn-primary active" id="next">
                Next
            </button>
            <button type="submit" class="btn btn-success" id="submit">
                Submit
            </button>

            <h1></h1>
            <button class="btn btn-secondary" id="back">
                Back
            </button>
        </div>

    </form>

}

<script>

    // Background education  Add button triggered....

    $("#AddBgEducation").on('click', function () {
        var arr = {
            InstitutionName: $('#InstitutionName').val(),
            Faculty: $('#Faculty').val(),
            InsturactionLang: $('#InsturactionLang').val(),
            InsCountry: $('#InsCountry').val(),
            StudyMode: $('#StudyMode').val(),
            EducationLevel: $('#EducationLevel').val(),
            EducationStDate: $('#EducationStDate').val(),
            EducationCompDate: $('#EducationCompDate').val(),
            Awarded: $('#ChkAwarded').prop('checked'),
            AvarageGrade: parseFloat($('#AvarageGrade').val())
        };
        $.ajax({
            type: 'POST',
            url: '/Application/BgAdd',
            contentType: "application/json; charset=utf-8",
            cache: 'false',
            dataType: "json",
            data: JSON.stringify(arr),
            success: function (data) {
                //location.reload();
                ResetTextsBg();
                RefreshBgEducationTBL();
            }
        });
    });

    function RefreshBgEducationTBL() {
        var url = '@Url.Action("BgEducationRecords", "Application")';
                var notifications = $("#tbl_BgEducations");
                setInterval(function () {
                    notifications.load(url);
                }, 3000);
    }

    // BgEducations Reset textboxs
    function ResetTextsBg() {
        document.getElementById('InstitutionName').value = null;
        document.getElementById('InsturactionLang').value = null;
        document.getElementById('Faculty').value = null;
        document.getElementById('InsCountry').value = null;
        document.getElementById('StudyMode').value = null;
        document.getElementById('EducationLevel').value = null;
        document.getElementById('EducationStDate').value = null;
        document.getElementById('EducationCompDate').value = null;
        document.getElementById('AvarageGrade').value = null;

    }
    function RefreshWorkExp() {
        var url = '@Url.Action("WorkExperiences", "Application")';
        var notifications = $("#tbl_WorkExps");
        setInterval(function () {
            notifications.load(url);
        }, 3000);
    }

    function checkboxTrigger(e) {
        pagerefresh();

        //Language Certificate Checkbox trigger event update database
        var langcert = {
            Checkbox: e.target.checked,
            appId: document.getElementById("id").value,
            ChkSeperator: 1
        };

        $.ajax({
            url: "/Application/CheckboxControl",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            cache: 'false',
            dataType: "json",
            data: JSON.stringify(langcert),
            success: function (data) { }
        });
    };

    // AWARDED Checkbox  process
    $('#ChkAwarded').change(function () {
        var isChecked = $(this).is(':checked');
        if (isChecked) {
            var ChkAwarded = {
                Checkbox: true,
                appId: document.getElementById("id").value,
                ChkSeperator: 2
            };
        }
        else {
            var ChkAwarded = {
                Checkbox: false,
                appId: document.getElementById("id").value,
                ChkSeperator: 2
            };
        }
        $.ajax({
            url: "/Application/CheckboxControl",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            cache: 'false',
            dataType: "json",
            data: JSON.stringify(ChkAwarded),
            success: function (data) {
                //console.log(JSON.stringify(chkAwarded));
            }
        });

    });

    // Work Experience Add button triggered....
    $("#AddWorkExps").on('click', function () {
        var arr = {
            CompanyName: $('#CompanyName').val(),
            EmployeeAdress: $('#EmployeeAdress').val(),
            EmployeeMail: $('#EmployeeMail').val(),
            EmployeePhone: $('#EmployeePhone').val(),
            JobDescription: $('#JobDescription').val(),
            ManagerName: $('#ManagerName').val(),
            JobType: $('#JobType').val(),
            Position: $('#Position').val()
       };
        alert(JSON.stringify(arr));
        $.ajax({
            type: 'POST',
            url: '/Application/WorkExpAdd',
            contentType: "application/json; charset=utf-8",
            cache: 'false',
            dataType: "json",
            data: JSON.stringify(arr),
            success: function (data) {
                //location.reload();
                ResetTextsWorkExps();
                RefreshWorkExp();
            }
        });
      });


    function ResetTextsWorkExps() {
        document.getElementById('CompanyName').value = null;
        document.getElementById('EmployeeAdress').value = null;
        document.getElementById('EmployeeMail').value = null;
        document.getElementById('EmployeePhone').value = null;
        document.getElementById('ManagerName').value = null;
        document.getElementById('JobType').value = null;
        document.getElementById('Position').value = null;
        document.getElementById('JobDescription').value = null;
    }



    // Pages functioanlity
    const links = document.querySelectorAll(".links li");
    const pages = document.querySelectorAll("form .page");
    const nextBtn = document.getElementById("next");
    const backBtn = document.getElementById("back");
    const submitBtn = document.getElementById("submit");
    const btns = document.querySelectorAll("form .btn");
    const form = document.querySelector("form");

    var currentPage = 1;

    const changeCurrentPage = (value, link = false) => {
        if (value == "equalize") {
            for (let i = 0; i < pages.length; i++) {
                pages[i].classList.remove("active");
            }


            pages.forEach((page) => {
                if (page.id == link.id) {
                    currentPage = parseInt(page.id);
                    page.classList.add("active");
                }
            });
            //
            for (let i = 0; i < links.length; i++) {
                links[i].classList.remove("active");
            }
            link.classList.add("active");
        } else {
            for (let i = 0; i < pages.length; i++) {
                if (parseInt(pages[i].id) == currentPage) {
                    pages[i].classList.remove("active");
                }
            }

            for (let i = 0; i < links.length; i++) {
                links[i].classList.remove("active");
            }

            if (value == "increment") {
                currentPage += 1;
            } else if (value == "decrement") {
                currentPage -= 1;
            }

            pages.forEach((page) => {
                if (parseInt(page.id) == currentPage) {
                    page.classList.add("active");
                }
            });
            links.forEach((link) => {
                if (parseInt(link.id) == currentPage) {
                    link.classList.add("active");
                }
            });
        }

        // Check if there should be NEXT or PREVIOUS button
        let className = "active";
        if (currentPage == 1) {
            nextBtn.classList.add(className);
            backBtn.classList.remove(className);
            submitBtn.classList.remove(className);
        } else if (currentPage == 6) {
            nextBtn.classList.remove(className);
            backBtn.classList.add(className);
            submitBtn.classList.add(className);
        } else {
            nextBtn.classList.add(className);
            backBtn.classList.add(className);
            submitBtn.classList.remove(className);
        }
    };

    form.addEventListener("submit", (e) => {

        if (e.submitter.id != "submit") {
            e.preventDefault();
        }

        // Input validation
        let isAllRequiredFilled = true;
        let activeRequiredDivs = document.querySelectorAll(
            ".page.active .required"
        );

        activeRequiredDivs.forEach((div) => {
            let element = div.childNodes[3];

            // Text inputs, date inputs, select options
            if (
                (element.tagName == "INPUT" && element.value.trim() == "") ||
                (element.tagName == "SELECT" && element.value == "Select")
            ) {
                element.parentElement.classList.add("wrong");
                isAllRequiredFilled = false;
            } else {
                element.parentElement.classList.remove("wrong");
            }
        });

        links.forEach((link) => {
            if (link.id == currentPage) {
                if (isAllRequiredFilled) {
                    link.classList.add("correct");
                    link.classList.remove("wrong");
                } else {
                    link.classList.add("wrong");
                    link.classList.remove("correct");
                }
            }
        });

        if (e.submitter.id == "next") {
            changeCurrentPage("increment");
        } else if (e.submitter.id == "back") {
            changeCurrentPage("decrement");
        }
    });

    links.forEach((link) => {
        link.addEventListener("click", () => {
            changeCurrentPage("equalize", link);
        });
    });

    // Languages
    let inputToggle = document.querySelector(".lang-checkbox");
    let languageContainer = document.querySelector(".languages");
    let langDropdown = document.querySelector(".lang-dropdown");

    inputToggle.addEventListener("change", () => {
        if (inputToggle.checked) {
            languageContainer.classList.add("active");
            langDropdown.parentElement.classList.add("required");
        } else {
            languageContainer.classList.remove("active");
            langDropdown.parentElement.classList.remove("required");
        }
    });

    langDropdown.addEventListener("change", () => {
        let id = langDropdown.options[langDropdown.selectedIndex].id;

        document.querySelectorAll(".lang").forEach((div) => {
            div.classList.remove("active");
        });

        document.querySelector(`.lang.${id}`).classList.add("active");
    });



</script>


<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
@*<script src="/Content/Templates/multisteps-form/select-country/dist/js/bootstrap-select-country.min.js"></script>*@

